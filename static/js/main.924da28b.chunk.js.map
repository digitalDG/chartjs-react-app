{"version":3,"sources":["components/BarChart.js","components/PieChart.js","components/LineChart.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["BarChart","options","title","display","props","displayTitle","text","fontSize","legend","displayLegend","position","legendPosition","data","this","Component","defaultProps","PieChart","LineChart","App","state","chartData","labels","datasets","label","backgroundColor","className","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"sPAGMA,E,2MAQFC,QAAU,CAENC,MAAO,CACHC,QAAS,EAAKC,MAAMC,aACpBC,KAAM,EAAKF,MAAMF,MACjBK,SAAU,IAEdC,OAAQ,CACJL,QAAS,EAAKC,MAAMK,cACpBC,SAAU,EAAKN,MAAMO,iB,wEAMzB,OACE,6BACE,gDACA,kBAAC,IAAD,CAAKC,KAAMC,KAAKT,MAAMQ,KAAMX,QAASY,KAAKZ,e,GA1B/Ba,aAAjBd,EAEKe,aAAe,CAClBV,cAAa,EACbI,eAAe,EACfE,eAAe,UA2BRX,QChCTgB,E,2MAQFf,QAAU,CAENC,MAAO,CACHC,QAAS,EAAKC,MAAMC,aACpBC,KAAM,EAAKF,MAAMF,MACjBK,SAAU,IAEdC,OAAQ,CACJL,QAAS,EAAKC,MAAMK,cACpBC,SAAU,EAAKN,MAAMO,iB,wEAMzB,OACE,6BACE,gDACA,kBAAC,IAAD,CAAKC,KAAMC,KAAKT,MAAMQ,KAAMX,QAASY,KAAKZ,e,GA1B/Ba,aAAjBE,EAEKD,aAAe,CAClBV,cAAa,EACbI,eAAe,EACfE,eAAe,SA2BRK,QChCTC,E,2MAQFhB,QAAU,CAENC,MAAO,CACHC,QAAS,EAAKC,MAAMC,aACpBC,KAAM,EAAKF,MAAMF,MACjBK,SAAU,IAEdC,OAAQ,CACJL,QAAS,EAAKC,MAAMK,cACpBC,SAAU,EAAKN,MAAMO,iB,wEAMzB,OACE,6BACE,iDACA,kBAAC,IAAD,CAAMC,KAAMC,KAAKT,MAAMQ,KAAMX,QAASY,KAAKZ,e,GA1B/Ba,aAAlBG,EAEKF,aAAe,CAClBV,cAAa,EACbI,eAAe,EACfE,eAAe,UA2BRM,QCwCAC,E,2MAjEbC,MAAQ,CACNC,UAAW,CACTC,OAAQ,CAAC,aAAc,SAAU,UAAW,QAAS,QAAS,YAAa,QAAS,cAAe,YAAa,UAChHC,SAAU,CACR,CACEC,MAAO,aACPX,KAAM,CACJ,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFY,gBAAiB,CACf,OACA,QACA,SACA,SACA,OACA,OACA,OACA,OACA,UACA,WAMRtB,MAAO,iD,wEAIC,IAAD,EAEsBW,KAAKM,MAA1BC,EAFD,EAECA,UAAWlB,EAFZ,EAEYA,MAEnB,OACE,yBAAKuB,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,0DAGF,yBAAKH,UAAU,qBACb,kBAAC,EAAD,CAAUb,KAAMQ,EAAWlB,MAAOA,KAGpC,yBAAKuB,UAAU,qBACb,kBAAC,EAAD,CAAUb,KAAMQ,EAAWlB,MAAOA,KAGpC,yBAAKuB,UAAU,qBACb,kBAAC,EAAD,CAAWb,KAAMQ,EAAWlB,MAAOA,U,GA7D3BY,aCKEe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.924da28b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass BarChart extends Component {\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend: true,\r\n        legendPosition:'bottom' \r\n    }\r\n\r\n    options = {\r\n        //maintainAspectRatio: false,\r\n        title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title,\r\n            fontSize: 25\r\n        },\r\n        legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n        }\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <h2>BarChart Example</h2>\r\n            <Bar data={this.props.data} options={this.options}/>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default BarChart;","import React, {Component} from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\nclass PieChart extends Component {\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend: true,\r\n        legendPosition:'right'\r\n    }\r\n\r\n    options = {\r\n        //maintainAspectRatio: false,\r\n        title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title,\r\n            fontSize: 25\r\n        },\r\n        legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n        }\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <h2>PieChart Example</h2>\r\n            <Pie data={this.props.data} options={this.options}/>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default PieChart;","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nclass LineChart extends Component {\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend: true,\r\n        legendPosition:'bottom' \r\n    }\r\n\r\n    options = {\r\n        //maintainAspectRatio: false,\r\n        title: {\r\n            display: this.props.displayTitle,\r\n            text: this.props.title,\r\n            fontSize: 25\r\n        },\r\n        legend: {\r\n            display: this.props.displayLegend,\r\n            position: this.props.legendPosition\r\n        }\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <h2>LineChart Example</h2>\r\n            <Line data={this.props.data} options={this.options}/>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default LineChart;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BarChart from './components/BarChart';\nimport PieChart from './components/PieChart';\nimport LineChart from './components/LineChart';\n\nclass App extends Component {\n\n  \n  state = {\n    chartData: {\n      labels: ['Manchester', 'Nashua', 'Concord', 'Derry', 'Dover', 'Rochester', 'Salem', 'Londonderry', 'Merrimack', 'Hudson'],\n      datasets: [\n        {\n          label: 'Population',\n          data: [\n            112525,\n            89246,\n            43412,\n            33667,\n            31771,\n            31366,\n            29554,\n            26302,\n            25969,\n            25559\n          ],\n          backgroundColor: [\n            'blue',\n            'green',\n            'purple',\n            'yellow',\n            'cyan',\n            'lime',\n            'aqua',\n            'teal',\n            'fuchsia',\n            'navy'\n          ]\n        }\n      ]\n\n    },\n    title: \"Largest Cities In New Hampshire by Population\"\n  }\n  \n  \n  render() {\n\n    const { chartData, title } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1>Sample Chart.js React App</h1>\n        </header>\n\n        <div className=\"sub chart-wrapper\">\n          <BarChart data={chartData} title={title} />\n        </div>\n\n        <div className=\"sub chart-wrapper\">\n          <PieChart data={chartData} title={title} />\n        </div>\n\n        <div className=\"sub chart-wrapper\">\n          <LineChart data={chartData} title={title} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}